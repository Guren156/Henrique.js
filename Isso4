import React, { useState } from 'react';

// Estilos básicos (incluídos aqui para referência, mas o prompt pediu sem CSS)
const styles = {
  container: {
    maxWidth: '1200px',
    margin: '20px auto',
    padding: '20px',
    backgroundColor: '#fff',
    borderRadius: '8px',
    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',
  },
  header: {
    textAlign: 'center',
    marginBottom: '20px',
  },
  button: {
    backgroundColor: '#007bff',
    color: 'white',
    border: 'none',
    padding: '10px 15px',
    borderRadius: '5px',
    cursor: 'pointer',
    fontSize: '16px',
    marginRight: '10px',
  },
  productItem: {
    border: '1px solid #ccc',
    padding: '15px',
    marginBottom: '10px',
    borderRadius: '5px',
    display: 'flex',
    flexDirection: 'column',
  },
  productForm: {
    display: 'flex',
    flexDirection: 'column',
    gap: '15px',
  },
  footer: {
    marginTop: '30px',
    textAlign: 'center',
    fontSize: '14px',
    color: '#666',
  },
};

// Componente para o rodapé
const Footer = () => {
  return (
    <footer style={styles.footer}>
      <p>Nome Completo: [Seu Nome Completo]</p>
      <p>RA: [Seu RA]</p>
    </footer>
  );
};

// Componente para um único item da lista de produtos
const ProductItem = ({ product, onDelete }) => {
  return (
    <div style={styles.productItem}>
      <h3>{product.name}</h3>
      <p><strong>ID:</strong> {product.id}</p>
      <p>{product.description}</p>
      <p><strong>Preço:</strong> R$ {product.price.toFixed(2)}</p>
      <button onClick={() => onDelete(product.id)} style={styles.button}>Excluir</button>
    </div>
  );
};

// Componente para a lista de produtos
const ProductList = ({ products, onDelete }) => {
  if (products.length === 0) {
    return <p>Não há produtos disponíveis.</p>;
  }

  return (
    <div>
      {products.map(product => (
        <ProductItem
          key={product.id}
          product={product}
          onDelete={onDelete}
        />
      ))}
    </div>
  );
};

// Componente para o formulário de criação de produto
const ProductForm = ({ onAddProduct, onCancel }) => {
  const [formData, setFormData] = useState({
    id: '',
    name: '',
    description: '',
    price: '',
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (formData.name && formData.price) {
      const newProduct = {
        ...formData,
        id: formData.id || Date.now().toString(),
        price: parseFloat(formData.price),
      };
      onAddProduct(newProduct);
    }
  };

  return (
    <form onSubmit={handleSubmit} style={styles.productForm}>
      <div>
        <label>ID: <br />
          <input type="text" name="id" value={formData.id} onChange={handleChange} required />
        </label>
      </div>
      <div>
        <label>Nome: <br />
          <input type="text" name="name" value={formData.name} onChange={handleChange} required />
        </label>
      </div>
      <div>
        <label>Descrição: <br />
          <textarea name="description" value={formData.description} onChange={handleChange}></textarea>
        </label>
      </div>
      <div>
        <label>Preço: <br />
          <input type="number" name="price" value={formData.price} onChange={handleChange} step="0.01" required />
        </label>
      </div>
      <button type="submit" style={styles.button}>Adicionar Produto</button>
      <button type="button" onClick={onCancel} style={styles.button}>Cancelar</button>
    </form>
  );
};

// Componente principal
const App = () => {
  const [products, setProducts] = useState([
    { id: '1', name: 'Notebook', description: 'Notebook Dell XPS 15', price: 7500.00 },
    { id: '2', name: 'Mouse Gamer', description: 'Mouse Logitech G PRO X', price: 450.00 },
  ]);
  const [view, setView] = useState('list');

  const handleAddProduct = (newProduct) => {
    setProducts([...products, newProduct]);
    setView('list');
  };

  const handleDeleteProduct = (id) => {
    setProducts(products.filter(product => product.id !== id));
  };

  return (
    <div style={styles.container}>
      <header style={styles.header}>
        <h1>Catálogo de Produtos</h1>
      </header>

      {view === 'list' ? (
        <>
          <button onClick={() => setView('form')} style={styles.button}>Adicionar Produto</button>
          <ProductList products={products} onDelete={handleDeleteProduct} />
        </>
      ) : (
        <ProductForm onAddProduct={handleAddProduct} onCancel={() => setView('list')} />
      )}

      <Footer />
    </div>
  );
};

export default App;
